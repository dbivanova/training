[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2019-08-02T11:58:43.749Z",
        "before": [
          {
            "result": {
              "duration": 216566655,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 11,
        "name": "Test for select operation",
        "description": "",
        "id": "db-connection-test;test-for-select-operation;;2",
        "after": [
          {
            "result": {
              "duration": 38814983,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 53929481,
              "status": "passed"
            },
            "line": 7,
            "name": "I send a select query using 1 to the DB",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 28
                }
              ],
              "location": "DBConnectionStepDef.selectQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2685539,
              "status": "passed"
            },
            "line": 8,
            "name": "I will get title Die Hard in the response",
            "match": {
              "location": "DBConnectionStepDef.selectVerify()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:44.093Z",
        "before": [
          {
            "result": {
              "duration": 39197899,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 12,
        "name": "Test for select operation",
        "description": "",
        "id": "db-connection-test;test-for-select-operation;;3",
        "after": [
          {
            "result": {
              "duration": 43762881,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 34930169,
              "status": "passed"
            },
            "line": 7,
            "name": "I send a select query using 3 to the DB",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 28
                }
              ],
              "location": "DBConnectionStepDef.selectQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 579899,
              "status": "passed"
            },
            "line": 8,
            "name": "I will get title LOTR: The Two Towers in the response",
            "match": {
              "location": "DBConnectionStepDef.anotherSelectVerify()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:44.219Z",
        "before": [
          {
            "result": {
              "duration": 37870328,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 21,
        "name": "Test for insert operation",
        "description": "",
        "id": "db-connection-test;test-for-insert-operation;;2",
        "after": [
          {
            "result": {
              "duration": 29251969,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          },
          {
            "result": {
              "duration": 63876596,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpInsert()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 93834787,
              "status": "passed"
            },
            "line": 17,
            "name": "I send new 9, 11 and 67 information to the DB via insert statement",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 11
                },
                {
                  "val": "11",
                  "offset": 14
                },
                {
                  "val": "67",
                  "offset": 21
                }
              ],
              "location": "DBConnectionStepDef.insertStatement(int,int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 37869933,
              "status": "passed"
            },
            "line": 18,
            "name": "New row will be added to the inventory table with inventory_id 9",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 63
                }
              ],
              "location": "DBConnectionStepDef.newRowVerify(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Insert"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:44.490Z",
        "before": [
          {
            "result": {
              "duration": 29770287,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 22,
        "name": "Test for insert operation",
        "description": "",
        "id": "db-connection-test;test-for-insert-operation;;3",
        "after": [
          {
            "result": {
              "duration": 36168525,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          },
          {
            "result": {
              "duration": 59454516,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpInsert()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 34032095,
              "status": "passed"
            },
            "line": 17,
            "name": "I send new 10, 12 and 22 information to the DB via insert statement",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                },
                {
                  "val": "12",
                  "offset": 15
                },
                {
                  "val": "22",
                  "offset": 22
                }
              ],
              "location": "DBConnectionStepDef.insertStatement(int,int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34362902,
              "status": "passed"
            },
            "line": 18,
            "name": "New row will be added to the inventory table with inventory_id 10",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 63
                }
              ],
              "location": "DBConnectionStepDef.newRowVerify(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Insert"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:44.688Z",
        "before": [
          {
            "result": {
              "duration": 34920300,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 31,
        "name": "Test for update operation",
        "description": "",
        "id": "db-connection-test;test-for-update-operation;;2",
        "after": [
          {
            "result": {
              "duration": 30232943,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          },
          {
            "result": {
              "duration": 70307600,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpUpdate()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 30544012,
              "status": "passed"
            },
            "line": 27,
            "name": "I send an update query to change 33 where actor_id is 3",
            "match": {
              "arguments": [
                {
                  "val": "33",
                  "offset": 33
                },
                {
                  "val": "3",
                  "offset": 54
                }
              ],
              "location": "DBConnectionStepDef.updateQuery(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 29856344,
              "status": "passed"
            },
            "line": 28,
            "name": "The rows in the DB will be successfully updated",
            "match": {
              "location": "DBConnectionStepDef.verifyUpdate()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Update"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:44.892Z",
        "before": [
          {
            "result": {
              "duration": 28385080,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 32,
        "name": "Test for update operation",
        "description": "",
        "id": "db-connection-test;test-for-update-operation;;3",
        "after": [
          {
            "result": {
              "duration": 29734758,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          },
          {
            "result": {
              "duration": 66515948,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpUpdate()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 32336213,
              "status": "passed"
            },
            "line": 27,
            "name": "I send an update query to change 11 where actor_id is 1",
            "match": {
              "arguments": [
                {
                  "val": "11",
                  "offset": 33
                },
                {
                  "val": "1",
                  "offset": 54
                }
              ],
              "location": "DBConnectionStepDef.updateQuery(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35523490,
              "status": "passed"
            },
            "line": 28,
            "name": "The rows in the DB will be successfully updated",
            "match": {
              "location": "DBConnectionStepDef.verifyUpdate()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Update"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:45.088Z",
        "before": [
          {
            "result": {
              "duration": 31770920,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 41,
        "name": "Test for delete operation",
        "description": "",
        "id": "db-connection-test;test-for-delete-operation;;2",
        "after": [
          {
            "result": {
              "duration": 33351926,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpDelete()"
            }
          },
          {
            "result": {
              "duration": 30911532,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 35878773,
              "status": "passed"
            },
            "line": 37,
            "name": "I send a delete query using the 6 to the film_category table",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 32
                }
              ],
              "location": "DBConnectionStepDef.deleteQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31213916,
              "status": "passed"
            },
            "line": 38,
            "name": "An existing entry with id 6 will be successfully deleted",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 26
                }
              ],
              "location": "DBConnectionStepDef.verifyDelete(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Delete"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:45.258Z",
        "before": [
          {
            "result": {
              "duration": 32455036,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 42,
        "name": "Test for delete operation",
        "description": "",
        "id": "db-connection-test;test-for-delete-operation;;3",
        "after": [
          {
            "result": {
              "duration": 34801083,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpDelete()"
            }
          },
          {
            "result": {
              "duration": 29691730,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 34899378,
              "status": "passed"
            },
            "line": 37,
            "name": "I send a delete query using the 7 to the film_category table",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 32
                }
              ],
              "location": "DBConnectionStepDef.deleteQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 33200734,
              "status": "passed"
            },
            "line": 38,
            "name": "An existing entry with id 7 will be successfully deleted",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 26
                }
              ],
              "location": "DBConnectionStepDef.verifyDelete(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Delete"
          }
        ]
      }
    ],
    "name": "DB Connection test",
    "description": "  I want to test my DB connection.",
    "id": "db-connection-test",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/DBConnection.feature",
    "tags": [
      {
        "name": "@DB",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 12865475523,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3989060069,
              "status": "passed"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:58:45.427Z",
        "line": 8,
        "name": "Choose a product from random category",
        "description": "",
        "id": "online-bookshop;choose-a-product-from-random-category",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7429382713,
              "status": "passed"
            },
            "line": 9,
            "name": "I extend the Категории menu and choose book category",
            "match": {
              "location": "OnlineShopStepDef.extendCategories()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6559975793,
              "status": "passed"
            },
            "line": 10,
            "name": "I choose a book from the list",
            "match": {
              "location": "OnlineShopStepDef.chooseBookFromList()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1192456015,
              "status": "passed"
            },
            "line": 11,
            "name": "The book description will be loaded with price and an option to order",
            "match": {
              "location": "OnlineShopStepDef.bookDetailsValidation()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 11639771798,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3903089654,
              "status": "passed"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:59:17.471Z",
        "line": 13,
        "name": "Search for a product",
        "description": "",
        "id": "online-bookshop;search-for-a-product",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 987224444,
              "status": "passed"
            },
            "line": 14,
            "name": "I search for a specific book",
            "match": {
              "location": "OnlineShopStepDef.bookSearch()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1969497043,
              "status": "passed"
            },
            "line": 15,
            "name": "I will be able to select the book from the search results",
            "match": {
              "location": "OnlineShopStepDef.selectBookFromSearch()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1328248060,
              "status": "passed"
            },
            "line": 16,
            "name": "The book description will be loaded with price and an option to order",
            "match": {
              "location": "OnlineShopStepDef.bookDetailsValidation()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 11555155008,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4135313203,
              "status": "passed"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:59:37.301Z",
        "line": 18,
        "name": "Add a book to the basket",
        "description": "",
        "id": "online-bookshop;add-a-book-to-the-basket",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3918705493,
              "status": "passed"
            },
            "line": 19,
            "name": "I search and load a specific book",
            "match": {
              "location": "OnlineShopStepDef.searchBook()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 258364431,
              "status": "passed"
            },
            "line": 20,
            "name": "I click on the Add to basket option",
            "match": {
              "location": "OnlineShopStepDef.addToBasket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1402890103,
              "status": "passed"
            },
            "line": 21,
            "name": "The book will be added to the basket",
            "match": {
              "location": "OnlineShopStepDef.basketValidation()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 11648552403,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4524709685,
              "status": "passed"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T11:59:58.576Z",
        "line": 23,
        "name": "Edit the basket",
        "description": "",
        "id": "online-bookshop;edit-the-basket",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4148467726,
              "status": "passed"
            },
            "line": 24,
            "name": "I add a book to the basket",
            "match": {
              "location": "OnlineShopStepDef.addAbookToBasket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 907887937,
              "status": "passed"
            },
            "line": 25,
            "name": "I load the added products",
            "match": {
              "location": "OnlineShopStepDef.loadBasket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 891084270,
              "status": "passed"
            },
            "line": 26,
            "name": "I will be able to increase the quantity",
            "match": {
              "location": "OnlineShopStepDef.increaseQuantity()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2041459074,
              "status": "passed"
            },
            "line": 27,
            "name": "I will be able to remove the products from the basket",
            "match": {
              "location": "OnlineShopStepDef.emptyBasket()"
            },
            "keyword": "And "
          }
        ]
      }
    ],
    "name": "Online Bookshop",
    "description": "  I want to create test scenarios about online bookshop operations",
    "id": "online-bookshop",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/OnlineShop.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-08-02T12:00:22.745Z",
        "line": 4,
        "name": "Get list of all authors",
        "description": "",
        "id": "authors-rest-api;get-list-of-all-authors",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1590507963,
              "status": "passed"
            },
            "line": 5,
            "name": "I send GET request to the authors endpoint",
            "match": {
              "location": "RestApiAuthorsStepDef.getAllAuthors()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 574373,
              "status": "passed"
            },
            "line": 6,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 454762,
              "status": "passed"
            },
            "line": 7,
            "name": "The service will return a list of existing entries",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyAuthorsList()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:24.336Z",
        "line": 9,
        "name": "Get author by authorID",
        "description": "",
        "id": "authors-rest-api;get-author-by-authorid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 137159882,
              "status": "passed"
            },
            "line": 10,
            "name": "I send GET request using the author\u0027s ID",
            "match": {
              "location": "RestApiAuthorsStepDef.getSpecificAuthor()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 405417,
              "status": "passed"
            },
            "line": 11,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 433444,
              "status": "passed"
            },
            "line": 12,
            "name": "The service will return the entry that corresponds to the authorID",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyEntry()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:24.486Z",
        "line": 14,
        "name": "Get authorID by bookID",
        "description": "",
        "id": "authors-rest-api;get-authorid-by-bookid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 131122845,
              "status": "passed"
            },
            "line": 15,
            "name": "I send GET request using a book\u0027s ID",
            "match": {
              "location": "RestApiAuthorsStepDef.getBook()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 416470,
              "status": "passed"
            },
            "line": 16,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 354098,
              "status": "passed"
            },
            "line": 17,
            "name": "The service will return the entry that corresponds to the bookID",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyGetAuthorByBook()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:24.620Z",
        "line": 19,
        "name": "Create an Author entry",
        "description": "",
        "id": "authors-rest-api;create-an-author-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 592093706,
              "status": "passed"
            },
            "line": 20,
            "name": "I send POST request to the authors endpoint",
            "match": {
              "location": "RestApiAuthorsStepDef.createEntry()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 527397,
              "status": "passed"
            },
            "line": 21,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 354887,
              "status": "passed"
            },
            "line": 22,
            "name": "The service will return new author ID",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyNewEntry()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:25.215Z",
        "line": 24,
        "name": "Edit an Author entry",
        "description": "",
        "id": "authors-rest-api;edit-an-author-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 122959643,
              "status": "passed"
            },
            "line": 25,
            "name": "I send PUT request to the authors endpoint changing the author\u0027s name",
            "match": {
              "location": "RestApiAuthorsStepDef.editEntry()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 419627,
              "status": "passed"
            },
            "line": 26,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 324096,
              "status": "passed"
            },
            "line": 27,
            "name": "The service will return the updated name in the details",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyResponse()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:25.331Z",
        "line": 29,
        "name": "Delete an Author entry",
        "description": "",
        "id": "authors-rest-api;delete-an-author-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 123577045,
              "status": "passed"
            },
            "line": 30,
            "name": "I send DELETE request",
            "match": {
              "location": "RestApiAuthorsStepDef.deleteEntry()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 394758,
              "status": "passed"
            },
            "line": 31,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Authors REST API",
    "description": "  I want to get, create,edit and delete an entry in the sample DB",
    "id": "authors-rest-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/RestApiAuthors.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2019-08-02T12:00:25.456Z",
        "before": [
          {
            "result": {
              "duration": 5037903,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 11,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 821590662,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 31460290",
            "match": {
              "arguments": [
                {
                  "val": "31460290",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 390416,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Viersen",
            "match": {
              "location": "SOAPStepDefs.verifyViersen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 414891,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Volksbank Viersen",
            "match": {
              "location": "SOAPStepDefs.verifyVolksbankViersen()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:26.303Z",
        "before": [
          {
            "result": {
              "duration": 106585,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 12,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 182790364,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 31061108",
            "match": {
              "arguments": [
                {
                  "val": "31061108",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 374231,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Willich",
            "match": {
              "location": "SOAPStepDefs.verifyWillich()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 356466,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Volksbank Willich",
            "match": {
              "location": "SOAPStepDefs.verifyVolksbankWillich()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:26.491Z",
        "before": [
          {
            "result": {
              "duration": 227381,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 13,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 199201246,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 31261282",
            "match": {
              "arguments": [
                {
                  "val": "31261282",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 497000,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Erkelenz",
            "match": {
              "location": "SOAPStepDefs.verifyErkelenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 276725,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Volksbank Erkelenz-Hückelhoven-Wegberg",
            "match": {
              "location": "SOAPStepDefs.verifyVolksbankErkelenzHückelhovenWegberg()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:26.696Z",
        "before": [
          {
            "result": {
              "duration": 65135,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 14,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 166575280,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 34270094",
            "match": {
              "arguments": [
                {
                  "val": "34270094",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 393968,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Solingen",
            "match": {
              "location": "SOAPStepDefs.verifySolingen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 364757,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Deutsche Bank",
            "match": {
              "location": "SOAPStepDefs.verifyDeutscheBank()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      }
    ],
    "name": "Bank branches search based on a BLZ codes",
    "description": "",
    "id": "bank-branches-search-based-on-a-blz-codes",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/SOAPService.feature",
    "tags": [
      {
        "name": "@SOAP",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-08-02T12:00:26.864Z",
        "line": 5,
        "name": "Register new user in WordPress",
        "description": "",
        "id": "user-registration;register-new-user-in-wordpress",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5464242,
              "status": "passed"
            },
            "line": 6,
            "name": "I want to create new user profile",
            "match": {
              "location": "UserRegStepDefs.generateUsernamePassword()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8164140412,
              "status": "passed"
            },
            "line": 7,
            "name": "I fill out the form and click on the Create Account button",
            "match": {
              "location": "UserRegStepDefs.enterNewRegData()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10409655861,
              "status": "passed"
            },
            "line": 8,
            "name": "My account is created and I\u0027m able to log into WordPress with that account",
            "match": {
              "location": "UserRegStepDefs.accountCreatedSuccessfully()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:00:45.450Z",
        "line": 10,
        "name": "Login attempt with invalid credentials",
        "description": "",
        "id": "user-registration;login-attempt-with-invalid-credentials",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 397127,
              "status": "passed"
            },
            "line": 11,
            "name": "I want to validate error message from WordPress",
            "match": {
              "location": "UserRegStepDefs.generateCredentials()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7452113673,
              "status": "passed"
            },
            "line": 12,
            "name": "I enter invalid credentials and click on Login",
            "match": {
              "location": "UserRegStepDefs.enterInvalidUsername()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7074507826,
              "status": "passed"
            },
            "line": 13,
            "name": "I won\u0027t be logged in",
            "match": {
              "location": "UserRegStepDefs.loginFailed()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "User Registration",
    "description": "  I want to register new user in WordPress.",
    "id": "user-registration",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/UserRegistration.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-08-02T12:00:59.979Z",
        "line": 5,
        "name": "Create an entry in the DB",
        "description": "",
        "id": "test-rest-api-calls;create-an-entry-in-the-db",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 492855865,
              "status": "passed"
            },
            "line": 6,
            "name": "I want to create new employee entry in the DB",
            "match": {
              "location": "RestApiStepsDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 643026578,
              "status": "passed"
            },
            "line": 7,
            "name": "I send my json to the POST endpoint",
            "match": {
              "location": "RestApiStepsDef.postJson()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 430681,
              "status": "passed"
            },
            "line": 8,
            "name": "I will see response 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "RestApiStepsDef.validateResponse(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 373441,
              "status": "passed"
            },
            "line": 9,
            "name": "The response body will contain new employee ID",
            "match": {
              "location": "RestApiStepsDef.addedEntry()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:01:01.124Z",
        "line": 11,
        "name": "Retrieve information from the DB",
        "description": "",
        "id": "test-rest-api-calls;retrieve-information-from-the-db",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 918602,
              "status": "passed"
            },
            "line": 12,
            "name": "An employee entry exists in the DB",
            "match": {
              "location": "RestApiStepsDef.dbQuerySetUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 497582699,
              "status": "passed"
            },
            "line": 13,
            "name": "I perform GET API call using the employee ID",
            "match": {
              "location": "RestApiStepsDef.getEmployee()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 499777554,
              "status": "passed"
            },
            "line": 14,
            "name": "The API call will return the employee name",
            "match": {
              "location": "RestApiStepsDef.retrieveInformation()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:01:02.126Z",
        "line": 16,
        "name": "Edit an entry in the DB",
        "description": "",
        "id": "test-rest-api-calls;edit-an-entry-in-the-db",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 490303754,
              "status": "passed"
            },
            "line": 17,
            "name": "I perform PUT API call using the employee ID",
            "match": {
              "location": "RestApiStepsDef.editEmployee()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 495422,
              "status": "passed"
            },
            "line": 18,
            "name": "The API call will return the updated data",
            "match": {
              "location": "RestApiStepsDef.verifyUpdatedEmployee()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-02T12:01:02.619Z",
        "line": 20,
        "name": "Delete an entry",
        "description": "",
        "id": "test-rest-api-calls;delete-an-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 272383,
              "status": "passed"
            },
            "line": 21,
            "name": "An employee entry exists in the DB",
            "match": {
              "location": "RestApiStepsDef.dbQuerySetUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 496420925,
              "status": "passed"
            },
            "line": 22,
            "name": "I perform DELETE API call using the employee ID",
            "match": {
              "location": "RestApiStepsDef.deleteEmployee()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 477832952,
              "status": "passed"
            },
            "line": 23,
            "name": "the user will no longer exist",
            "match": {
              "location": "RestApiStepsDef.validateDeletedEntry()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test REST API calls",
    "description": "  I want to execute API calls to create and retrieve information",
    "id": "test-rest-api-calls",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/restAPI.feature",
    "tags": []
  }
]