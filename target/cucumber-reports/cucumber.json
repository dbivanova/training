[
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2019-08-08T07:00:21.657Z",
        "before": [
          {
            "result": {
              "duration": 321337693,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 11,
        "name": "Test for select operation",
        "description": "",
        "id": "db-connection-test;test-for-select-operation;;2",
        "after": [
          {
            "result": {
              "duration": 56811193,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 106026453,
              "status": "passed"
            },
            "line": 7,
            "name": "I send a select query using 1 to the DB",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 28
                }
              ],
              "location": "DBConnectionStepDef.selectQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4719331,
              "status": "passed"
            },
            "line": 8,
            "name": "I will get title Die Hard in the response",
            "match": {
              "location": "DBConnectionStepDef.selectVerify()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:22.191Z",
        "before": [
          {
            "result": {
              "duration": 43894318,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 12,
        "name": "Test for select operation",
        "description": "",
        "id": "db-connection-test;test-for-select-operation;;3",
        "after": [
          {
            "result": {
              "duration": 50002014,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 51380902,
              "status": "passed"
            },
            "line": 7,
            "name": "I send a select query using 3 to the DB",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 28
                }
              ],
              "location": "DBConnectionStepDef.selectQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 658851,
              "status": "passed"
            },
            "line": 8,
            "name": "I will get title LOTR: The Two Towers in the response",
            "match": {
              "location": "DBConnectionStepDef.anotherSelectVerify()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:22.342Z",
        "before": [
          {
            "result": {
              "duration": 46575120,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 21,
        "name": "Test for insert operation",
        "description": "",
        "id": "db-connection-test;test-for-insert-operation;;2",
        "after": [
          {
            "result": {
              "duration": 96909124,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpInsert()"
            }
          },
          {
            "result": {
              "duration": 55276769,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46930797,
              "status": "passed"
            },
            "line": 17,
            "name": "I send new 9, 11 and 67 information to the DB via insert statement",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 11
                },
                {
                  "val": "11",
                  "offset": 14
                },
                {
                  "val": "67",
                  "offset": 21
                }
              ],
              "location": "DBConnectionStepDef.insertStatement(int,int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46427480,
              "status": "passed"
            },
            "line": 18,
            "name": "New row will be added to the inventory table with inventory_id 9",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 63
                }
              ],
              "location": "DBConnectionStepDef.newRowVerify(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Insert"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:22.653Z",
        "before": [
          {
            "result": {
              "duration": 44323815,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 22,
        "name": "Test for insert operation",
        "description": "",
        "id": "db-connection-test;test-for-insert-operation;;3",
        "after": [
          {
            "result": {
              "duration": 81962800,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpInsert()"
            }
          },
          {
            "result": {
              "duration": 42300286,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 44745416,
              "status": "passed"
            },
            "line": 17,
            "name": "I send new 10, 12 and 22 information to the DB via insert statement",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 11
                },
                {
                  "val": "12",
                  "offset": 15
                },
                {
                  "val": "22",
                  "offset": 22
                }
              ],
              "location": "DBConnectionStepDef.insertStatement(int,int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 48349162,
              "status": "passed"
            },
            "line": 18,
            "name": "New row will be added to the inventory table with inventory_id 10",
            "match": {
              "arguments": [
                {
                  "val": "10",
                  "offset": 63
                }
              ],
              "location": "DBConnectionStepDef.newRowVerify(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Insert"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:22.921Z",
        "before": [
          {
            "result": {
              "duration": 61767378,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 31,
        "name": "Test for update operation",
        "description": "",
        "id": "db-connection-test;test-for-update-operation;;2",
        "after": [
          {
            "result": {
              "duration": 158478334,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpUpdate()"
            }
          },
          {
            "result": {
              "duration": 73574194,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61046946,
              "status": "passed"
            },
            "line": 27,
            "name": "I send an update query to change 33 where actor_id is 3",
            "match": {
              "arguments": [
                {
                  "val": "33",
                  "offset": 33
                },
                {
                  "val": "3",
                  "offset": 54
                }
              ],
              "location": "DBConnectionStepDef.updateQuery(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63675243,
              "status": "passed"
            },
            "line": 28,
            "name": "The rows in the DB will be successfully updated",
            "match": {
              "location": "DBConnectionStepDef.verifyUpdate()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Update"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:23.348Z",
        "before": [
          {
            "result": {
              "duration": 55750083,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 32,
        "name": "Test for update operation",
        "description": "",
        "id": "db-connection-test;test-for-update-operation;;3",
        "after": [
          {
            "result": {
              "duration": 112764971,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpUpdate()"
            }
          },
          {
            "result": {
              "duration": 50198997,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 84021857,
              "status": "passed"
            },
            "line": 27,
            "name": "I send an update query to change 11 where actor_id is 1",
            "match": {
              "arguments": [
                {
                  "val": "11",
                  "offset": 33
                },
                {
                  "val": "1",
                  "offset": 54
                }
              ],
              "location": "DBConnectionStepDef.updateQuery(int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 70229805,
              "status": "passed"
            },
            "line": 28,
            "name": "The rows in the DB will be successfully updated",
            "match": {
              "location": "DBConnectionStepDef.verifyUpdate()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Update"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:23.728Z",
        "before": [
          {
            "result": {
              "duration": 70271649,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 41,
        "name": "Test for delete operation",
        "description": "",
        "id": "db-connection-test;test-for-delete-operation;;2",
        "after": [
          {
            "result": {
              "duration": 56313008,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpDelete()"
            }
          },
          {
            "result": {
              "duration": 57104497,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 41401422,
              "status": "passed"
            },
            "line": 37,
            "name": "I send a delete query using the 6 to the film_category table",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 32
                }
              ],
              "location": "DBConnectionStepDef.deleteQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 59891489,
              "status": "passed"
            },
            "line": 38,
            "name": "An existing entry with id 6 will be successfully deleted",
            "match": {
              "arguments": [
                {
                  "val": "6",
                  "offset": 26
                }
              ],
              "location": "DBConnectionStepDef.verifyDelete(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Delete"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:24.026Z",
        "before": [
          {
            "result": {
              "duration": 61815145,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 42,
        "name": "Test for delete operation",
        "description": "",
        "id": "db-connection-test;test-for-delete-operation;;3",
        "after": [
          {
            "result": {
              "duration": 58014020,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUpDelete()"
            }
          },
          {
            "result": {
              "duration": 58268244,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 58005731,
              "status": "passed"
            },
            "line": 37,
            "name": "I send a delete query using the 7 to the film_category table",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 32
                }
              ],
              "location": "DBConnectionStepDef.deleteQuery(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 60680215,
              "status": "passed"
            },
            "line": 38,
            "name": "An existing entry with id 7 will be successfully deleted",
            "match": {
              "arguments": [
                {
                  "val": "7",
                  "offset": 26
                }
              ],
              "location": "DBConnectionStepDef.verifyDelete(int)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          },
          {
            "name": "@Delete"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:24.329Z",
        "before": [
          {
            "result": {
              "duration": 55249531,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 51,
        "name": "Insert into film",
        "description": "",
        "id": "db-connection-test;insert-into-film;;2",
        "after": [
          {
            "result": {
              "duration": 44018667,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 70369549,
              "status": "passed"
            },
            "line": 46,
            "name": "I send new 9, \"Primal Fear\", \"Thriller movie\", 72 and 10 to the DB via insert statement",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 11
                },
                {
                  "val": "\"Primal Fear\"",
                  "offset": 14
                },
                {
                  "val": "\"Thriller movie\"",
                  "offset": 29
                },
                {
                  "val": "72",
                  "offset": 47
                },
                {
                  "val": "10",
                  "offset": 54
                }
              ],
              "location": "DBConnectionStepDef.insertNewFilm(int,String,String,int,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 63575765,
              "status": "passed"
            },
            "line": 47,
            "name": "I send a select statement using id 9",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 35
                }
              ],
              "location": "DBConnectionStepDef.selectNewFilm(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 684116,
              "status": "passed"
            },
            "line": 48,
            "name": "I will get title \"Primal Fear\" in the response",
            "match": {
              "location": "DBConnectionStepDef.verifyNewFilm()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:24.573Z",
        "before": [
          {
            "result": {
              "duration": 45891793,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 59,
        "name": "Update film row",
        "description": "",
        "id": "db-connection-test;update-film-row;;2",
        "after": [
          {
            "result": {
              "duration": 43522852,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 47562015,
              "status": "passed"
            },
            "line": 55,
            "name": "I send an update statement to change the title \"Along Came Spider\" using id 9 to the film table",
            "match": {
              "arguments": [
                {
                  "val": "\"Along Came Spider\"",
                  "offset": 47
                },
                {
                  "val": "9",
                  "offset": 76
                }
              ],
              "location": "DBConnectionStepDef.updateNewFilm(String,int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 49055384,
              "status": "passed"
            },
            "line": 56,
            "name": "The table will be successfully updated",
            "match": {
              "location": "DBConnectionStepDef.verifyUpdatedFilm()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:24.765Z",
        "before": [
          {
            "result": {
              "duration": 60408622,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.openConnection()"
            }
          }
        ],
        "line": 66,
        "name": "Delete film row",
        "description": "",
        "id": "db-connection-test;delete-film-row;;2",
        "after": [
          {
            "result": {
              "duration": 43057826,
              "status": "passed"
            },
            "match": {
              "location": "DBConnectionStepDef.cleanUp()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 45384135,
              "status": "passed"
            },
            "line": 62,
            "name": "I execute a delete statement using id 9 in the film table",
            "match": {
              "arguments": [
                {
                  "val": "9",
                  "offset": 38
                }
              ],
              "location": "DBConnectionStepDef.deleteNewFilm(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46635518,
              "status": "passed"
            },
            "line": 63,
            "name": "The existing entry with title \"Along Came Spider\" will be successfully deleted",
            "match": {
              "arguments": [
                {
                  "val": "\"Along Came Spider\"",
                  "offset": 30
                }
              ],
              "location": "DBConnectionStepDef.verifyDelete(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@DB"
          }
        ]
      }
    ],
    "name": "DB Connection test",
    "description": "  I want to test my DB connection.",
    "id": "db-connection-test",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/DBConnection.feature",
    "tags": [
      {
        "name": "@DB",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "org.openqa.selenium.WebDriverException: Reached error page: about:neterror?e\u003dnetTimeout\u0026u\u003dhttps%3A//www.bard.bg/\u0026c\u003dUTF-8\u0026f\u003dregular\u0026d\u003d%D0%A1%D1%8A%D1%80%D0%B2%D1%8A%D1%80%D1%8A%D1%82%20www.bard.bg%20%D0%BF%D1%80%D0%BE%D1%81%D1%80%D0%BE%D1%87%D0%B8%20%D0%B7%D0%B0%D0%B4%D0%B0%D0%B4%D0%B5%D0%BD%D0%BE%D1%82%D0%BE%20%D0%B2%D1%80%D0%B5%D0%BC%D0%B5%20%D0%B7%D0%B0%20%D0%BE%D1%82%D0%B3%D0%BE%D0%B2%D0%BE%D1%80.\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027TOSHIBA\u0027, ip: \u0027192.168.56.1\u0027, os.name: \u0027Windows 8.1\u0027, os.arch: \u0027x86\u0027, os.version: \u00276.3\u0027, java.version: \u00271.8.0_211\u0027\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 68.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190717172542, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 5928, moz:profile: C:\\Windows\\Temp\\rust_mozpro..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.3, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}\nSession ID: 2b651b72-de7f-4ee2-8ca6-d2c4067cde6b\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)\r\n\tat com.examples.test.training.glue.OnlineShopStepDef.setUp(OnlineShopStepDef.java:43)\r\n\tat ✽.I have an existing account with an online bookshop(file:src/test/resources/Features/OnlineShop.feature:5)\r\n",
              "duration": 29485151180,
              "status": "failed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 522264,
              "status": "skipped"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:24.973Z",
        "line": 9,
        "name": "Choose a product from category",
        "description": "",
        "id": "online-bookshop;choose-a-product-from-category",
        "after": [
          {
            "output": [
              "Finished scenario"
            ],
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 2998471892,
              "status": "passed"
            },
            "match": {
              "location": "OnlineShopStepDef.screenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1057556,
              "status": "skipped"
            },
            "line": 10,
            "name": "I extend the Категории menu and choose book category",
            "match": {
              "location": "OnlineShopStepDef.extendCategories()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 371862,
              "status": "skipped"
            },
            "line": 11,
            "name": "I choose a book from the list",
            "match": {
              "location": "OnlineShopStepDef.chooseBookFromList()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 384494,
              "status": "skipped"
            },
            "line": 12,
            "name": "The book description will be loaded with price and an option to order",
            "match": {
              "location": "OnlineShopStepDef.bookDetailsValidation()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@UI"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "org.openqa.selenium.WebDriverException: Reached error page: about:neterror?e\u003ddnsNotFound\u0026u\u003dhttps%3A//www.bard.bg/\u0026c\u003dUTF-8\u0026f\u003dregular\u0026d\u003d%D0%9D%D1%8F%D0%BC%D0%B0%20%D0%B2%D1%80%D1%8A%D0%B7%D0%BA%D0%B0%20%D1%81%D1%8A%D1%81%20%D1%81%D1%8A%D1%80%D0%B2%D1%8A%D1%80%D0%B0%20%D0%BD%D0%B0%20%E2%80%9Ewww.bard.bg%E2%80%9C.\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027TOSHIBA\u0027, ip: \u0027192.168.56.1\u0027, os.name: \u0027Windows 8.1\u0027, os.arch: \u0027x86\u0027, os.version: \u00276.3\u0027, java.version: \u00271.8.0_211\u0027\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 68.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190717172542, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 8540, moz:profile: C:\\Windows\\Temp\\rust_mozpro..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.3, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}\nSession ID: 96f523b2-8f01-4dc4-9679-c02a7559ad7e\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)\r\n\tat com.examples.test.training.glue.OnlineShopStepDef.setUp(OnlineShopStepDef.java:43)\r\n\tat ✽.I have an existing account with an online bookshop(file:src/test/resources/Features/OnlineShop.feature:5)\r\n",
              "duration": 61001960368,
              "status": "failed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 353703,
              "status": "skipped"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:00:57.482Z",
        "line": 15,
        "name": "Search for a product",
        "description": "",
        "id": "online-bookshop;search-for-a-product",
        "after": [
          {
            "output": [
              "Finished scenario"
            ],
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 2833858625,
              "status": "passed"
            },
            "match": {
              "location": "OnlineShopStepDef.screenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1052424,
              "status": "skipped"
            },
            "line": 16,
            "name": "I search for a specific book",
            "match": {
              "location": "OnlineShopStepDef.bookSearch()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 325281,
              "status": "skipped"
            },
            "line": 17,
            "name": "I will be able to select the book from the search results",
            "match": {
              "location": "OnlineShopStepDef.selectBookFromSearch()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 302384,
              "status": "skipped"
            },
            "line": 18,
            "name": "The book description will be loaded with price and an option to order",
            "match": {
              "location": "OnlineShopStepDef.bookDetailsValidation()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UI"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Timeout loading page after 300000ms\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027TOSHIBA\u0027, ip: \u0027192.168.56.1\u0027, os.name: \u0027Windows 8.1\u0027, os.arch: \u0027x86\u0027, os.version: \u00276.3\u0027, java.version: \u00271.8.0_211\u0027\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 68.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190717172542, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 2608, moz:profile: C:\\Windows\\Temp\\rust_mozpro..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.3, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}\nSession ID: c30fde11-deb3-44e1-8729-b2a98c4c0e5e\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:277)\r\n\tat com.examples.test.training.glue.OnlineShopStepDef.setUp(OnlineShopStepDef.java:43)\r\n\tat ✽.I have an existing account with an online bookshop(file:src/test/resources/Features/OnlineShop.feature:5)\r\n",
              "duration": 303306438739,
              "status": "failed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 237644,
              "status": "skipped"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:02:01.329Z",
        "line": 21,
        "name": "Add a book to the basket",
        "description": "",
        "id": "online-bookshop;add-a-book-to-the-basket",
        "after": [
          {
            "output": [
              "Finished scenario"
            ],
            "embeddings": [
              {
                "data": "iVBORw0KGgoAAAANSUhEUgAABAAAAAK2CAYAAADQXu7RAAARDUlEQVR4nO3YQQ0AIAzAwPk3DSoWEnqnoO/OAQAAAL43rwMAAACAfQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABBgAAAAAEGAAAAAAQYAAAAABAgAEAAAAAAQYAAAAABBgAAAAAEGAAAAAAQIABAAAAAAEGAAAAAAQYAAAAABBgAAAAAECAAQAAAAABFz2gKDpUysnlAAAAAElFTkSuQmCC",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 656645474,
              "status": "passed"
            },
            "match": {
              "location": "OnlineShopStepDef.screenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 731091,
              "status": "skipped"
            },
            "line": 22,
            "name": "I search and load a specific book",
            "match": {
              "location": "OnlineShopStepDef.searchBook()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 235671,
              "status": "skipped"
            },
            "line": 23,
            "name": "I click on the Add to basket option",
            "match": {
              "location": "OnlineShopStepDef.addToBasket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 212775,
              "status": "skipped"
            },
            "line": 24,
            "name": "The book will be added to the basket",
            "match": {
              "location": "OnlineShopStepDef.basketValidation()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@UI"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 11939366366,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3820407643,
              "status": "passed"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:07:05.299Z",
        "line": 27,
        "name": "Edit the basket",
        "description": "",
        "id": "online-bookshop;edit-the-basket",
        "after": [
          {
            "output": [
              "Finished scenario"
            ],
            "result": {
              "duration": 176456,
              "status": "passed"
            },
            "match": {
              "location": "OnlineShopStepDef.screenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4246533828,
              "status": "passed"
            },
            "line": 28,
            "name": "I add a book to the basket",
            "match": {
              "location": "OnlineShopStepDef.addAbookToBasket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 803211987,
              "status": "passed"
            },
            "line": 29,
            "name": "I load the added products",
            "match": {
              "location": "OnlineShopStepDef.loadBasket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 820868720,
              "status": "passed"
            },
            "line": 30,
            "name": "I will be able to increase the quantity",
            "match": {
              "location": "OnlineShopStepDef.increaseQuantity()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1850952432,
              "status": "passed"
            },
            "line": 31,
            "name": "I will be able to remove the products from the basket",
            "match": {
              "location": "OnlineShopStepDef.emptyBasket()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@UI"
          }
        ]
      },
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 12693273877,
              "status": "passed"
            },
            "line": 5,
            "name": "I have an existing account with an online bookshop",
            "match": {
              "location": "OnlineShopStepDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: Unable to locate element: *[name\u003d\u0027email\u0027]\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027TOSHIBA\u0027, ip: \u0027192.168.56.1\u0027, os.name: \u0027Windows 8.1\u0027, os.arch: \u0027x86\u0027, os.version: \u00276.3\u0027, java.version: \u00271.8.0_211\u0027\nDriver info: org.openqa.selenium.firefox.FirefoxDriver\nCapabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 68.0.1, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20190717172542, moz:geckodriverVersion: 0.24.0, moz:headless: false, moz:processID: 3868, moz:profile: C:\\Windows\\Temp\\rust_mozpro..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 6.3, rotatable: false, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}\nSession ID: 9476d3cd-e387-4ec6-af24-2cd4a874af9a\n*** Element info: {Using\u003dname, value\u003demail}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:190)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:124)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:161)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:577)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:328)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:416)\r\n\tat org.openqa.selenium.By$ByName.findElement(By.java:284)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:320)\r\n\tat com.examples.test.training.glue.OnlineShopStepDef.login(OnlineShopStepDef.java:53)\r\n\tat ✽.I log into the website(file:src/test/resources/Features/OnlineShop.feature:6)\r\n",
              "duration": 15286179762,
              "status": "failed"
            },
            "line": 6,
            "name": "I log into the website",
            "match": {
              "location": "OnlineShopStepDef.login()"
            },
            "keyword": "When "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:07:28.785Z",
        "line": 34,
        "name": "Add to favourites",
        "description": "",
        "id": "online-bookshop;add-to-favourites",
        "after": [
          {
            "output": [
              "Finished scenario"
            ],
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 1074378710,
              "status": "passed"
            },
            "match": {
              "location": "OnlineShopStepDef.screenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 748461,
              "status": "skipped"
            },
            "line": 35,
            "name": "I extend the Категории menu and choose random category",
            "match": {
              "location": "OnlineShopStepDef.i_extend_the_Категории_menu_and_choose_random_category()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 193037,
              "status": "skipped"
            },
            "line": 36,
            "name": "I choose random book from the list",
            "match": {
              "location": "OnlineShopStepDef.i_choose_random_book_from_the_list()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 230933,
              "status": "skipped"
            },
            "line": 37,
            "name": "I click on Add to favourites",
            "match": {
              "location": "OnlineShopStepDef.i_click_on_Add_to_favourites()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 192247,
              "status": "skipped"
            },
            "line": 38,
            "name": "The book will appear in the favourites list",
            "match": {
              "location": "OnlineShopStepDef.the_book_will_appear_in_the_favourites_list()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@UI"
          }
        ]
      }
    ],
    "name": "Online Bookshop",
    "description": "  I want to create test scenarios about online bookshop operations",
    "id": "online-bookshop",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/OnlineShop.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-08-08T07:07:57.844Z",
        "line": 4,
        "name": "Get list of all authors",
        "description": "",
        "id": "authors-rest-api;get-list-of-all-authors",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "error_message": "java.net.SocketTimeoutException: Read timed out\r\n\tat java.net.SocketInputStream.socketRead0(Native Method)\r\n\tat java.net.SocketInputStream.socketRead(SocketInputStream.java:116)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:171)\r\n\tat java.net.SocketInputStream.read(SocketInputStream.java:141)\r\n\tat org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:160)\r\n\tat org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:84)\r\n\tat org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:273)\r\n\tat org.apache.http.impl.conn.LoggingSessionInputBuffer.readLine(LoggingSessionInputBuffer.java:122)\r\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)\r\n\tat org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)\r\n\tat org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)\r\n\tat org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)\r\n\tat org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:259)\r\n\tat org.apache.http.impl.conn.ManagedClientConnectionImpl.receiveResponseHeader(ManagedClientConnectionImpl.java:209)\r\n\tat org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)\r\n\tat org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:686)\r\n\tat org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:488)\r\n\tat org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)\r\n\tat org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)\r\n\tat org.apache.http.client.HttpClient$execute$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\r\n\tat io.restassured.internal.RequestSpecificationImpl$RestAssuredHttpBuilder.doRequest(RequestSpecificationImpl.groovy:2028)\r\n\tat io.restassured.internal.http.HTTPBuilder.doRequest(HTTPBuilder.java:494)\r\n\tat io.restassured.internal.http.HTTPBuilder.request(HTTPBuilder.java:451)\r\n\tat io.restassured.internal.http.HTTPBuilder$request$2.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendHttpRequest(RequestSpecificationImpl.groovy:1434)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1212)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1021)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:812)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)\r\n\tat io.restassured.internal.RequestSpecificationImpl.sendRequest(RequestSpecificationImpl.groovy:1221)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1212)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1021)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:812)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:149)\r\n\tat io.restassured.internal.filter.SendRequestFilter.filter(SendRequestFilter.groovy:30)\r\n\tat io.restassured.filter.Filter$filter$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.time.TimingFilter.filter(TimingFilter.java:56)\r\n\tat io.restassured.filter.Filter$filter.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:141)\r\n\tat io.restassured.internal.filter.FilterContextImpl.next(FilterContextImpl.groovy:72)\r\n\tat io.restassured.filter.FilterContext$next.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:113)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1631)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1212)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1021)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:812)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)\r\n\tat io.restassured.internal.RequestSpecificationImpl.applyPathParamsAndSendRequest(RequestSpecificationImpl.groovy:1637)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1212)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1021)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:812)\r\n\tat io.restassured.internal.RequestSpecificationImpl.invokeMethod(RequestSpecificationImpl.groovy)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.call(PogoInterceptableSite.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoInterceptableSite.callCurrent(PogoInterceptableSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:182)\r\n\tat io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy:166)\r\n\tat io.restassured.internal.RequestSpecificationImpl.get(RequestSpecificationImpl.groovy)\r\n\tat com.examples.test.training.implementation.RestApiAuthorsImplementation.getAuthorsList(RestApiAuthorsImplementation.java:24)\r\n\tat com.examples.test.training.glue.RestApiAuthorsStepDef.getAllAuthors(RestApiAuthorsStepDef.java:13)\r\n\tat ✽.I send GET request to the authors endpoint(file:src/test/resources/Features/RestApiAuthors.feature:5)\r\n",
              "duration": 188687399090,
              "status": "failed"
            },
            "line": 5,
            "name": "I send GET request to the authors endpoint",
            "match": {
              "location": "RestApiAuthorsStepDef.getAllAuthors()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 425549,
              "status": "skipped"
            },
            "line": 6,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 398311,
              "status": "skipped"
            },
            "line": 7,
            "name": "The service will return a list of existing entries",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyAuthorsList()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:06.542Z",
        "line": 9,
        "name": "Get author by authorID",
        "description": "",
        "id": "authors-rest-api;get-author-by-authorid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 266712274,
              "status": "passed"
            },
            "line": 10,
            "name": "I send GET request using the author\u0027s ID",
            "match": {
              "location": "RestApiAuthorsStepDef.getSpecificAuthor()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c0\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat com.examples.test.training.implementation.RestApiAuthorsImplementation.verifyResponseCode(RestApiAuthorsImplementation.java:33)\r\n\tat com.examples.test.training.glue.RestApiAuthorsStepDef.verifyResponseCode(RestApiAuthorsStepDef.java:19)\r\n\tat ✽.The response code will be 200(file:src/test/resources/Features/RestApiAuthors.feature:11)\r\n",
              "duration": 1419155,
              "status": "failed"
            },
            "line": 11,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 457524,
              "status": "skipped"
            },
            "line": 12,
            "name": "The service will return the entry that corresponds to the authorID",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyEntry()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:06.817Z",
        "line": 14,
        "name": "Get authorID by bookID",
        "description": "",
        "id": "authors-rest-api;get-authorid-by-bookid",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 94646767,
              "status": "passed"
            },
            "line": 15,
            "name": "I send GET request using a book\u0027s ID",
            "match": {
              "location": "RestApiAuthorsStepDef.getBook()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c0\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat com.examples.test.training.implementation.RestApiAuthorsImplementation.verifyResponseCode(RestApiAuthorsImplementation.java:33)\r\n\tat com.examples.test.training.glue.RestApiAuthorsStepDef.verifyResponseCode(RestApiAuthorsStepDef.java:19)\r\n\tat ✽.The response code will be 200(file:src/test/resources/Features/RestApiAuthors.feature:16)\r\n",
              "duration": 681747,
              "status": "failed"
            },
            "line": 16,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 385284,
              "status": "skipped"
            },
            "line": 17,
            "name": "The service will return the entry that corresponds to the bookID",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyGetAuthorByBook()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:06.918Z",
        "line": 19,
        "name": "Create an Author entry",
        "description": "",
        "id": "authors-rest-api;create-an-author-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 626168187,
              "status": "passed"
            },
            "line": 20,
            "name": "I send POST request to the authors endpoint",
            "match": {
              "location": "RestApiAuthorsStepDef.createEntry()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c0\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat com.examples.test.training.implementation.RestApiAuthorsImplementation.verifyResponseCode(RestApiAuthorsImplementation.java:33)\r\n\tat com.examples.test.training.glue.RestApiAuthorsStepDef.verifyResponseCode(RestApiAuthorsStepDef.java:19)\r\n\tat ✽.The response code will be 200(file:src/test/resources/Features/RestApiAuthors.feature:21)\r\n",
              "duration": 520686,
              "status": "failed"
            },
            "line": 21,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 215933,
              "status": "skipped"
            },
            "line": 22,
            "name": "The service will return new author ID",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyNewEntry()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:07.548Z",
        "line": 24,
        "name": "Edit an Author entry",
        "description": "",
        "id": "authors-rest-api;edit-an-author-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 101693196,
              "status": "passed"
            },
            "line": 25,
            "name": "I send PUT request to the authors endpoint changing the author\u0027s name",
            "match": {
              "location": "RestApiAuthorsStepDef.editEntry()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c0\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat com.examples.test.training.implementation.RestApiAuthorsImplementation.verifyResponseCode(RestApiAuthorsImplementation.java:33)\r\n\tat com.examples.test.training.glue.RestApiAuthorsStepDef.verifyResponseCode(RestApiAuthorsStepDef.java:19)\r\n\tat ✽.The response code will be 200(file:src/test/resources/Features/RestApiAuthors.feature:26)\r\n",
              "duration": 629639,
              "status": "failed"
            },
            "line": 26,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 267251,
              "status": "skipped"
            },
            "line": 27,
            "name": "The service will return the updated name in the details",
            "match": {
              "location": "RestApiAuthorsStepDef.verifyResponse()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:07.654Z",
        "line": 29,
        "name": "Delete an Author entry",
        "description": "",
        "id": "authors-rest-api;delete-an-author-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 91600420,
              "status": "passed"
            },
            "line": 30,
            "name": "I send DELETE request",
            "match": {
              "location": "RestApiAuthorsStepDef.deleteEntry()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "java.lang.AssertionError: expected:\u003c200\u003e but was:\u003c0\u003e\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:834)\r\n\tat org.junit.Assert.assertEquals(Assert.java:645)\r\n\tat org.junit.Assert.assertEquals(Assert.java:631)\r\n\tat com.examples.test.training.implementation.RestApiAuthorsImplementation.verifyResponseCode(RestApiAuthorsImplementation.java:33)\r\n\tat com.examples.test.training.glue.RestApiAuthorsStepDef.verifyResponseCode(RestApiAuthorsStepDef.java:19)\r\n\tat ✽.The response code will be 200(file:src/test/resources/Features/RestApiAuthors.feature:31)\r\n",
              "duration": 553056,
              "status": "failed"
            },
            "line": 31,
            "name": "The response code will be 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 26
                }
              ],
              "location": "RestApiAuthorsStepDef.verifyResponseCode(int)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Authors REST API",
    "description": "  I want to get, create,edit and delete an entry in the sample DB",
    "id": "authors-rest-api",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/RestApiAuthors.feature",
    "tags": []
  },
  {
    "line": 2,
    "elements": [
      {
        "start_timestamp": "2019-08-08T07:11:07.748Z",
        "before": [
          {
            "result": {
              "duration": 4382603,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 11,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 730706798,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 31460290",
            "match": {
              "arguments": [
                {
                  "val": "31460290",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 268435,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Viersen",
            "match": {
              "location": "SOAPStepDefs.verifyViersen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 223433,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Volksbank Viersen",
            "match": {
              "location": "SOAPStepDefs.verifyVolksbankViersen()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:08.491Z",
        "before": [
          {
            "result": {
              "duration": 35923,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 12,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 171162696,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 31061108",
            "match": {
              "arguments": [
                {
                  "val": "31061108",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 275936,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Willich",
            "match": {
              "location": "SOAPStepDefs.verifyWillich()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 322122,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Volksbank Willich",
            "match": {
              "location": "SOAPStepDefs.verifyVolksbankWillich()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:08.665Z",
        "before": [
          {
            "result": {
              "duration": 65530,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 13,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 160222375,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 31261282",
            "match": {
              "arguments": [
                {
                  "val": "31261282",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 260145,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Erkelenz",
            "match": {
              "location": "SOAPStepDefs.verifyErkelenz()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 235671,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Volksbank Erkelenz-Hückelhoven-Wegberg",
            "match": {
              "location": "SOAPStepDefs.verifyVolksbankErkelenzHückelhovenWegberg()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:08.828Z",
        "before": [
          {
            "result": {
              "duration": 30396,
              "status": "passed"
            },
            "match": {
              "location": "SOAPStepDefs.setUp()"
            }
          }
        ],
        "line": 14,
        "name": "Find bank branches in Germany using BLZ codes",
        "description": "",
        "id": "bank-branches-search-based-on-a-blz-codes;find-bank-branches-in-germany-using-blz-codes;;5",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 178379266,
              "status": "passed"
            },
            "line": 5,
            "name": "I run a SOAP request using code 34270094",
            "match": {
              "arguments": [
                {
                  "val": "34270094",
                  "offset": 32
                }
              ],
              "location": "SOAPStepDefs.runRequest(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 394758,
              "status": "passed"
            },
            "line": 6,
            "name": "I verify the location Solingen",
            "match": {
              "location": "SOAPStepDefs.verifySolingen()"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 364756,
              "status": "passed"
            },
            "line": 7,
            "name": "the bank name is Deutsche Bank",
            "match": {
              "location": "SOAPStepDefs.verifyDeutscheBank()"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@SOAP"
          }
        ]
      }
    ],
    "name": "Bank branches search based on a BLZ codes",
    "description": "",
    "id": "bank-branches-search-based-on-a-blz-codes",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/SOAPService.feature",
    "tags": [
      {
        "name": "@SOAP",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-08-08T07:11:09.010Z",
        "line": 5,
        "name": "Register new user in WordPress",
        "description": "",
        "id": "user-registration;register-new-user-in-wordpress",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7374868,
              "status": "passed"
            },
            "line": 6,
            "name": "I want to create new user profile",
            "match": {
              "location": "UserRegStepDefs.generateUsernamePassword()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 7775285627,
              "status": "passed"
            },
            "line": 7,
            "name": "I fill out the form and click on the Create Account button",
            "match": {
              "location": "UserRegStepDefs.enterNewRegData()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10158225295,
              "status": "passed"
            },
            "line": 8,
            "name": "My account is created and I\u0027m able to log into WordPress with that account",
            "match": {
              "location": "UserRegStepDefs.accountCreatedSuccessfully()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:26.955Z",
        "line": 10,
        "name": "Login attempt with invalid credentials",
        "description": "",
        "id": "user-registration;login-attempt-with-invalid-credentials",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 245145,
              "status": "passed"
            },
            "line": 11,
            "name": "I want to validate error message from WordPress",
            "match": {
              "location": "UserRegStepDefs.generateCredentials()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6400262435,
              "status": "passed"
            },
            "line": 12,
            "name": "I enter invalid credentials and click on Login",
            "match": {
              "location": "UserRegStepDefs.enterInvalidUsername()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6496452310,
              "status": "passed"
            },
            "line": 13,
            "name": "I won\u0027t be logged in",
            "match": {
              "location": "UserRegStepDefs.loginFailed()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "User Registration",
    "description": "  I want to register new user in WordPress.",
    "id": "user-registration",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/UserRegistration.feature",
    "tags": []
  },
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2019-08-08T07:11:39.854Z",
        "line": 5,
        "name": "Create an entry in the DB",
        "description": "",
        "id": "test-rest-api-calls;create-an-entry-in-the-db",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 585237317,
              "status": "passed"
            },
            "line": 6,
            "name": "I want to create new employee entry in the DB",
            "match": {
              "location": "RestApiStepsDef.setUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1558233506,
              "status": "passed"
            },
            "line": 7,
            "name": "I send my json to the POST endpoint",
            "match": {
              "location": "RestApiStepsDef.postJson()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 266067,
              "status": "passed"
            },
            "line": 8,
            "name": "I will see response 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 20
                }
              ],
              "location": "RestApiStepsDef.validateResponse(int)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 221459,
              "status": "passed"
            },
            "line": 9,
            "name": "The response body will contain new employee ID",
            "match": {
              "location": "RestApiStepsDef.addedEntry()"
            },
            "keyword": "And "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:42.001Z",
        "line": 11,
        "name": "Retrieve information from the DB",
        "description": "",
        "id": "test-rest-api-calls;retrieve-information-from-the-db",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 247513,
              "status": "passed"
            },
            "line": 12,
            "name": "An employee entry exists in the DB",
            "match": {
              "location": "RestApiStepsDef.dbQuerySetUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 497611319,
              "status": "passed"
            },
            "line": 13,
            "name": "I perform GET API call using the employee ID",
            "match": {
              "location": "RestApiStepsDef.getEmployee()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 496408098,
              "status": "passed"
            },
            "line": 14,
            "name": "The API call will return the employee name",
            "match": {
              "location": "RestApiStepsDef.retrieveInformation()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:42.997Z",
        "line": 16,
        "name": "Edit an entry in the DB",
        "description": "",
        "id": "test-rest-api-calls;edit-an-entry-in-the-db",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 483325820,
              "status": "passed"
            },
            "line": 17,
            "name": "I perform PUT API call using the employee ID",
            "match": {
              "location": "RestApiStepsDef.editEmployee()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 230539,
              "status": "passed"
            },
            "line": 18,
            "name": "The API call will return the updated data",
            "match": {
              "location": "RestApiStepsDef.verifyUpdatedEmployee()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "start_timestamp": "2019-08-08T07:11:43.482Z",
        "line": 20,
        "name": "Delete an entry",
        "description": "",
        "id": "test-rest-api-calls;delete-an-entry",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 293306,
              "status": "passed"
            },
            "line": 21,
            "name": "An employee entry exists in the DB",
            "match": {
              "location": "RestApiStepsDef.dbQuerySetUp()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 478603331,
              "status": "passed"
            },
            "line": 22,
            "name": "I perform DELETE API call using the employee ID",
            "match": {
              "location": "RestApiStepsDef.deleteEmployee()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 469502582,
              "status": "passed"
            },
            "line": 23,
            "name": "the user will no longer exist",
            "match": {
              "location": "RestApiStepsDef.validateDeletedEntry()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "Test REST API calls",
    "description": "  I want to execute API calls to create and retrieve information",
    "id": "test-rest-api-calls",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/restAPI.feature",
    "tags": []
  }
]